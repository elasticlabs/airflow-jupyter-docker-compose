# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}
# If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
# server port the client connected to
map $http_x_forwarded_port $proxy_x_forwarded_port {
  default $http_x_forwarded_port;
  ''      $server_port;
}
# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}
# Apply fix for very long server names
server_names_hash_bucket_size 128;
# Default dhparam
ssl_dhparam /etc/nginx/dhparam/dhparam.pem;
# Set appropriate X-Forwarded-Ssl header
map $scheme $proxy_x_forwarded_ssl {
  default off;
  https on;
}
gzip_types text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent"';
access_log off;
resolver 127.0.0.11;
# HTTP 1.1 support
proxy_http_version 1.1;
proxy_buffering off;
proxy_set_header Host $http_host;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $proxy_connection;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;
# Mitigate httpoxy attack (see README for details)
proxy_set_header Proxy "";
server {
        server_name _; # This is just an invalid value which will never trigger on a real hostname.
        listen 80;
        access_log /var/log/nginx/access.log vhost;
        return 503;
}
# server blocks definition
server {
        server_name airflow.elasticlabs.co;
        listen 80 ;
        access_log /var/log/nginx/access.log vhost;
        # Airflow -> https://airflow.apache.org/docs/stable/howto/run-behind-proxy.html
        location / {
            proxy_pass http://airflow:8080;
            proxy_set_header Host $host;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        # Flower -> https://flower.readthedocs.io/en/latest/reverse-proxy.html
        location /flower {
            proxy_pass http://flower:5555;
            rewrite ^/flower/(.*)$ /$1 break;  # remove prefix from http header
            proxy_set_header Host $host;
            proxy_set_header X-Script-Name /flower;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        # PGAdmin -> https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html#reverse-proxying
        location /pgadmin {
            proxy_pass http://pgadmin:80;
            proxy_set_header X-Script-Name /pgadmin;
            proxy_set_header Host $host;
            proxy_redirect off;
        }
        # Jupyter and Jupyter Notebook -> https://jupyter.readthedocs.io/en/latest/running.html
        # Jupyter and Jupyter Lab -> https://jupyterlab.readthedocs.io/en/stable/getting_started/starting.html?highlight=port
        location /jupyter {
            proxy_pass http://jupyter:8888;
            rewrite ^/jupyter/(.*)$ /$1 break;  # remove prefix from http header
            proxy_set_header Host $host;
            proxy_set_header X-Script-Name /jupyter;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
}