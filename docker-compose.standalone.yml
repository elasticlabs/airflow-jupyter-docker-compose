version: '3.7'
services:
  airflow:
    container_name: airflow4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    ports:
      - "8080:8080"
    image: ${COMPOSE_PROJECT_NAME}_webserver:latest
    build:
      context: ./airflow
    depends_on:
      - postgres
      - redis
    environment:
      - LOAD_EX=n
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
      - PYTHONPATH=/usr/local/airflow
    env_file:
      - ./airflow/.env
    volumes:
      - ./airflow/dags:/usr/local/airflow/dags
      - ./scripts:/usr/local/airflow/scripts
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - airflow

  flower:
    container_name: flower4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    ports:
      - "5555:5555"
    image: ${COMPOSE_PROJECT_NAME}_flower:latest
    build:
      context: ./airflow
    depends_on:
      - redis
    environment:
      - EXECUTOR=Celery
    command: flower
    networks:
      - airflow

  scheduler:
    container_name: scheduler4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    image: ${COMPOSE_PROJECT_NAME}_scheduler:latest
    build:
      context: ./airflow
    depends_on:
      - airflow
    volumes:
      - ./airflow/dags:/usr/local/airflow/dags
      - ./scripts:/usr/local/airflow/scripts
    environment:
      - LOAD_EX=n
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
      - PYTHONPATH=/usr/local/airflow
    command: scheduler
    env_file:
      - ./airflow/.env
    networks:
      - airflow

  pgadmin:
    container_name: pgadmin4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    expose: 
      - "80"
    image: dpage/pgadmin4:latest
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - '/tmp/servers.json:/servers.json'
    env_file:
      - ./airflow/pgadmin.env
    networks:
      - airflow
          
  worker1:
    container_name: worker_a4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    image: ${COMPOSE_PROJECT_NAME}_worker1:latest
    build:
      context: ./airflow
    restart: always
    depends_on:
      - scheduler
    volumes:
      - ./airflow/dags:/usr/local/airflow/dags
      - ./scripts:/usr/local/airflow/scripts
    environment:
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
      - PYTHONPATH=/usr/local/airflow
    command: worker
    env_file:
      - ./airflow/.env
    networks:
      - airflow

  worker2:
    container_name: worker_b4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    image: ${COMPOSE_PROJECT_NAME}_worker2:latest
    build:
      context: ./airflow
    restart: always
    depends_on:
      - scheduler
    volumes:
      - ./airflow/dags:/usr/local/airflow/dags
      - ./scripts:/usr/local/airflow/scripts
    environment:
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
      - PYTHONPATH=/usr/local/airflow
    command: worker
    env_file:
      - ./airflow/.env
    networks:
      - airflow 
     
  postgres:
    container_name: postgres4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    image: postgres:9.6
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    networks:
      - airflow

  redis:
    container_name: redis4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    image: redis:5.0.5
    networks:
      - airflow

volumes:
  pgadmin_data:

networks:
  airflow: