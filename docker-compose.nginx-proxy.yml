version: '3.7'
services:
  airflow-proxy:
    image: ${COMPOSE_PROJECT_NAME}_airflow-proxy:latest
    container_name: airflow-proxy4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    expose:
      - "80"
    build:
      context: ./proxy
    environment:
      - DHPARAM_GENERATION=false
      - VIRTUAL_HOST=airflow.elasticlabs.co
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=airflow.elasticlabs.co
      - LETSENCRYPT_EMAIL=patrice.mauny@gmail.com
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - airflow-proxy
      - airflow

  airflow:
    image: ${COMPOSE_PROJECT_NAME}_webserver:latest
    container_name: airflow4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    build:
      context: ./airflow
    depends_on:
      - airflow-proxy
      - postgres
      - redis
    expose:
      - "8080"
    environment:
      - LOAD_EX=n
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
      - PYTHONPATH=/usr/local/airflow
      # HTTPS settings for nginx-proxy with letsencrypt companion
      - VIRTUAL_HOST=airflow.elasticlabs.co
      - VIRTUAL_PORT=8080
    env_file:
      - ./airflow/.env
    volumes:
      - airflow_dags:/usr/local/airflow/dags
      - airflow_scripts:/usr/local/airflow/scripts
      - /var/run/docker.sock:/tmp/docker.sock:ro
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - airflow

  flower:
    image: ${COMPOSE_PROJECT_NAME}_flower:latest
    container_name: flower4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    build:
      context: ./airflow
    restart: always
    depends_on:
      - redis
    environment:
      - EXECUTOR=Celery
    expose:
      - "5555"
    command: flower -u flower
    networks:
      - airflow

  scheduler:
    image: ${COMPOSE_PROJECT_NAME}_scheduler:latest
    container_name: scheduler4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    build:
      context: ./airflow
    depends_on:
      - airflow-proxy
    volumes:
      - airflow_dags:/usr/local/airflow/dags
      - airflow_scripts:/usr/local/airflow/scripts
    environment:
      - LOAD_EX=n
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
      - PYTHONPATH=/usr/local/airflow
    command: scheduler
    env_file:
      - ./airflow/.env
    networks:
      - airflow
  
  jupyter:
    image: ${COMPOSE_PROJECT_NAME}_jupyter:latest
    container_name: jupyter4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    expose: 
      - "8888"
    build:
      context: ./airflow
    depends_on:
      - airflow-proxy
    volumes:
      - airflow_dags:/usr/local/airflow/dags
      - airflow_scripts:/usr/local/airflow/scripts
      - jupyter_notebooks:/usr/local/airflow/notebooks
    environment:
      - PYTHONPATH=/usr/local/airflow
    command: ~/.local/bin/jupyter notebook --port 8888 --allow-root
    env_file:
      - ./airflow/.env
    networks:
      - airflow

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    container_name: pgadmin4${COMPOSE_PROJECT_NAME}
    expose: 
      - "80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - '/tmp/servers.json:/servers.json'
    env_file:
      - ./airflow/pgadmin.env
    networks:
      - airflow
  
  worker1:
    image: ${COMPOSE_PROJECT_NAME}_worker1:latest
    container_name: worker_a4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    build:
      context: ./airflow
    restart: always
    depends_on:
      - scheduler
    volumes:
      - airflow_dags:/usr/local/airflow/dags
      - airflow_scripts:/usr/local/airflow/scripts
    environment:
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
      - PYTHONPATH=/usr/local/airflow
    command: worker
    env_file:
      - ./airflow/.env
    networks:
      - airflow

  worker2:
    image: ${COMPOSE_PROJECT_NAME}_worker2:latest
    container_name: worker_b4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    build:
      context: ./airflow
    restart: always
    depends_on:
      - scheduler
    volumes:
      - airflow_dags:/usr/local/airflow/dags
      - airflow_scripts:/usr/local/airflow/scripts
    environment:
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
      - PYTHONPATH=/usr/local/airflow
    command: worker
    env_file:
      - ./airflow/.env
    networks:
      - airflow 
     
  postgres:
    image: postgres:9.6
    container_name: postgres4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    networks:
      - airflow

  redis:
    image: redis:5.0.5
    container_name: redis4${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    networks:
      - airflow

volumes:
  pgadmin_data:
  airflow_dags:
  airflow_scripts:
  jupyter_notebooks:

# Networks. Note that the following network should be existing and connected 
# to your nginx-proxy container for proper docker-gen containers detections, 
# and further SSL certificates creation.
networks:
  airflow-proxy:
    external:
      name: airflow-proxy
  airflow: